name: Firebase Deploy and Generate APK

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone Flutter
        run: git clone https://github.com/flutter/flutter.git 

      - name: Checkout Flutter 
        run: |
          cd flutter
          git checkout 3.3.4

      - name: Export Flutter Path
        run: echo "##[set-output name=FlutterToolPath]$(pwd)/flutter/bin"
        id: flutter_path

      - name: Build Release APK
        run: ${{ steps.flutter_path.outputs.FlutterToolPath }}/flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk 

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js and Firebase
        uses: actions/setup-node@v2
        with:
          node-version: 16.13.0 

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Download APK Artifact
        uses: actions/download-artifact@v2
        with:
          name: release-apk # O mesmo nome que você usou ao fazer o upload
          path: app/build/outputs/flutter-apk # Caminho de destino onde você deseja que o APK seja baixado

      - name: Distribuir APK via Firebase App Distribution
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" > firebase_key.json
          npm install -g firebase-tools
          firebase appdistribution:distribute app/build/outputs/flutter-apk/app-release.apk 
            --app 1:288868821009:android:6e69df7fb08a24881169b0 
            --release-notes "Bug fixes and improvements"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
